<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.lsh.atp.core.dao.area.AreaDao">

    <resultMap id="resultMap" type="Area">
        <id     property="id"        column="ID"         jdbcType="INTEGER" javaType="java.lang.Integer" />
        <result property="code"      column="CODE"       jdbcType="VARCHAR" javaType="java.lang.String" />
        <result property="name"      column="NAME"       jdbcType="VARCHAR" javaType="java.lang.String" />
        <result property="createdAt" column="CREATED_AT" jdbcType="INTEGER" javaType="java.lang.Integer" />
        <result property="updatedAt" column="UPDATED_AT" jdbcType="INTEGER" javaType="java.lang.Integer" />
        <result property="valid"     column="VALID"      jdbcType="INTEGER" javaType="java.lang.Integer" />
    </resultMap>

    <sql id="columns">
        ID,
        CODE,
        NAME,
        CREATED_AT,
        UPDATED_AT,
        VALID
    </sql>

    <sql id="conditions">
        <if test="id != null">
            and ID = #{id, jdbcType=INTEGER}
        </if>
        <if test="code != null">
            and CODE = #{code, jdbcType=VARCHAR}
        </if>
        <if test="name != null">
            and NAME = #{name, jdbcType=VARCHAR}
        </if>
        <if test="createdAt != null">
            and CREATED_AT = #{createdAt, jdbcType=INTEGER}
        </if>
        <if test="updatedAt != null">
            and UPDATED_AT = #{updatedAt, jdbcType=INTEGER}
        </if>
        <if test="valid != null">
            and VALID = #{valid, jdbcType=INTEGER}
        </if>
    </sql>

    <sql id="select">
        select
        <include refid="columns" />
        from
        AREA
        <where>
            <include refid="conditions" />
        </where>
    </sql>

    <insert id="insert" parameterType="Area">
        insert into AREA
        <trim prefix="(" suffixOverrides="," suffix=")">
            ID,
            <if test="code != null">
                CODE,
            </if>
            <if test="name != null">
                NAME,
            </if>
            <if test="createdAt != null">
                CREATED_AT,
            </if>
            <if test="updatedAt != null">
                UPDATED_AT,
            </if>
            <if test="valid != null">
                VALID,
            </if>
        </trim>
        values
        <trim prefix="(" suffixOverrides="," suffix=")">
            #{id, jdbcType=INTEGER},
            <if test="code != null">
                #{code, jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name, jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null">
                #{createdAt, jdbcType=INTEGER},
            </if>
            <if test="updatedAt != null">
                #{updatedAt, jdbcType=INTEGER},
            </if>
            <if test="valid != null">
                #{valid, jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="Area">
        update AREA
        <set>
            <if test="code != null">
                CODE = #{code, jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                NAME = #{name, jdbcType=VARCHAR},
            </if>
            <if test="createdAt != null">
                CREATED_AT = #{createdAt, jdbcType=INTEGER},
            </if>
            <if test="updatedAt != null">
                UPDATED_AT = #{updatedAt, jdbcType=INTEGER},
            </if>
            <if test="valid != null">
                VALID = #{valid, jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id, jdbcType=INTEGER}
    </update>

    <delete id="delete" parameterType="java.lang.Integer">
        delete from AREA where id = #{id, jdbcType=INTEGER}
    </delete>

    <select id="get" parameterType="java.lang.Integer" resultMap="resultMap">
        select
          <include refid="columns" />
        from
          AREA
        where
          id = #{id, jdbcType=INTEGER}
    </select>

    <select id="findOne" parameterType="Area" resultMap="resultMap">
        <include refid="select" />
    </select>

    <select id="findList" parameterType="Area" resultMap="resultMap">
        <include refid="select" />
    </select>

    <select id="count" parameterType="Area" resultType="java.lang.Integer">
        select
        count(*)
        from
        AREA
        <where>
            <include refid="conditions" />
        </where>
    </select>

    <select id="getZonecodeByDistrict" resultType="java.lang.String">
        SELECT T.CODE FROM AREA T
           LEFT JOIN AREA_ADDRESS S ON T.ID = S.AREA_ID
          WHERE S.DISTRICT_CODE = #{districtCode}
    </select>
</mapper>
